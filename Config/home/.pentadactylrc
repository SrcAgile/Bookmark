map , <leader>

" Theme
source ~/.pentadactyl/desert.penta

" Hints
set hintkeys=asdfg;lkjh
hi -a Hint text-transform: uppercase


" Search
command! -nargs=* g tabopen http://www.google.com/search?q=<args>
command! -nargs=* d tabopen https://duckduckgo.com/?q=<args>&v=

" C-g as ESC
map  -g user <C-g> <ESC>
imap -g user <C-g> <ESC>

" Bars
command! bookstack sidebar! Bookstack
map -g user ,b -ex bookstack
map -g user ,c -ex sbclose
nmap <f2> -e set go!=T

" AutoProxy
map -g user <f3> -ex js dactyl.globalVariables['toggle_autoproxy']();

" Stylish
command! toggle-stylish -javascript
  \ var prefs = Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch).prefHasUserValue("extensions.stylish.styleRegistrationEnabled");
  \ if (prefs){
          \ stylishOverlay.turnOnOff(true);
  \ } else {
          \ stylishOverlay.turnOnOff(false);
  \ }
map -g user <leader>s -ex toggle-stylish

map g{ -js content.getSelection().toString()!=""?dactyl.execute(":tabopen "+ content.getSelection()):CommandExMode().open("tabopen ")

" Bookmarks
map -g user <A-a> -silent -ex dialog addbookmark
map -g user <A-b> -silent -ex tabopen chrome://browser/content/places/places.xul
map -g user <C-l> -silent -ex nohlfind

" Tabs
map -g user ,, -silent -ex tabnext
map -g user ,. -silent -ex tabnext
map -g user ,f -silent -ex tabrewind
map -g user ,l -silent -ex tablast
map -g user ,d -silent -ex tabduplicate

map -builtin d <C-d>
map -builtin u <C-u>
map -builtin U u
map -builtin D d
nmap -builtin q gT
nmap -builtin w gt
nmap -builtin j 5j
nmap -builtin k 5k
nmap -builtin <C-e> 10<C-e>
nmap -builtin <C-y> 10<C-e>

map -count -modes=n,v X -builtin <count>:emenu<Space>Private<Space>Browsing<Tab>

nmap <leader>j :jumps<cr>
nmap <leader>p :pa<cr>
nmap <leader>eu :set encoding=UTF-8<cr>
nmap <leader>eg :set encoding=GB2312<cr>
nmap <leader>a -ex addons
nmap <leader>d -ex downloads
nmap <leader>h -js io.run('chrome', [buffer.URL])

set nextpattern=\s*下一页|下一张|下页\s*,\bNext\b,^>$,^(>>|››|»)$,^(>|»),(>|»)$,\bmore\b
set previouspattern=\s*上一页|上一张|上页\s*,\bPrev|previous\b,^<$,^(<<|‹‹|«)$,^(<|«),(<|«)$
set defsearch=google
set maxitems=5

" Instapaper -- depends on instapaper bookmarklet with `readlater' keyword
command! instapaper open readlater
map -g user ,r -ex instapaper
" Instapaper text -- depends on instapaper bookmarklet with `text' keyword
command! instatext open text
map -g user ,t -ex instatext

" Org
command! store-link -javascript
   \ -desc 'Store link for Orgmode'
   \ io.system('emacsclient -c "org-protocol:/store-link:/'
   \ + encodeURIComponent(buffer.URL) + '/'
   \ + encodeURIComponent(buffer.title) + '"')
command! capture -javascript
   \ -desc 'Capture URL with selection in Orgmode.'
   \ io.system('emacsclient -c "org-protocol:/capture:/x/'
   \ + encodeURIComponent(buffer.URL) + '/'
   \ + encodeURIComponent(buffer.title) + '/'
   \ + encodeURIComponent(window.getSelection()) + '"')

command! save-link -javascript
   \ -desc 'Save link in Orgmode.'
   \ io.system('emacsclient -c "org-protocol:/capture:/s/'
   \ + encodeURIComponent(buffer.URL) + '/'
   \ + encodeURIComponent(buffer.title) + '"')

map -g user ,w -ex save-link
map -g user ,e -ex store-link


command! wide-margin -javascript -desc 'set wide margin on left and right'
   \ let body = buffer.doc.getElementsByTagName('body')[0];
   \ body.style.marginLeft = '20%';
   \ body.style.marginRight = '30%';

command! small-margin -javascript -desc 'set small margin on left and right'
   \ let body = buffer.doc.getElementsByTagName('body')[0];
   \ body.style.marginLeft = '10%';
   \ body.style.marginRight = '15%';

command! no-margin -javascript -desc 'set no margin on left and right'
   \ let body = buffer.doc.getElementsByTagName('body')[0];
   \ body.style.marginLeft = '0';
   \ body.style.marginRight = '0';

map -g user ,m -ex wide-margin
map -g user ,M -ex no-margin

" Google Gmail, Reader,
autocmd LocationChange .* js modes.passAllKeys = /.*(mail\.google\.com|www\.google\.com\/reader).*/.test(buffer.URL)
" Web QQ
autocmd LocationChange .* js modes.passAllKeys = /.*(web\.qq\.com).*/.test(buffer.URL)
" Stack Overflow
" autocmd LocationChange .* js modes.passAllKeys = /.*(stackoverflow|superuser\.com).*/.test(buffer.URL)

javascript <<EOF
  dactyl.globalVariables['tt_autoproxy'] = false;
  dactyl.globalVariables['toggle_stylish'] = function() {
      toggle_status = dactyl.globalVariables['tt_stylish'];
      dactyl.globalVariables['tt_stylish'] = toggle_status = !toggle_status;

      if (toggle_status) {
          dactyl.execute('set! extensions.stylish.styleRegistrationEnabled = true');
      } else {
          dactyl.execute('set! extensions.stylish.styleRegistrationEnabled = false');
      }
  }
  dactyl.globalVariables['toggle_autoproxy'] = function() {
      toggle_status = dactyl.globalVariables['tt_autoproxy'];

      if (toggle_status == 'global') {
          dactyl.execute('set! extensions.autoproxy.proxyMode='+'auto');
          dactyl.globalVariables['tt_autoproxy'] = 'auto';
          dactyl.execute('echo "Autoproxy auto"');
      } else if (toggle_status == 'auto') {
          dactyl.execute('set! extensions.autoproxy.proxyMode='+'disabled');
          dactyl.globalVariables['tt_autoproxy'] = 'disabled';
          dactyl.execute('echo "Autoproxy disabled"');
      } else {
          dactyl.execute('set! extensions.autoproxy.proxyMode='+'global');
          dactyl.globalVariables['tt_autoproxy'] = 'global';
          dactyl.execute('echo "Autoproxy global"');
      }
  }
EOF

